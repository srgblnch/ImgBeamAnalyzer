//=============================================================================
//
// file :         ImgBeamAnalyzerClass.h
//
// description :  Include for the ImgBeamAnalyzerClass root class.
//                This class is represents the singleton class for
//                the ImgBeamAnalyzer device class.
//                It contains all properties and methods which the 
//                ImgBeamAnalyzer requires only once e.g. the commands.
//			
// project :      TANGO Device Server
//
// $Author: julien_malik $
//
// $Revision: 1.9 $
//
// $Log: not supported by cvs2svn $
//
// copyleft :     European Synchrotron Radiation Facility
//                BP 220, Grenoble 38043
//                FRANCE
//
//=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================

#ifndef _IMGBEAMANALYZERCLASS_H
#define _IMGBEAMANALYZERCLASS_H

#include <ImgBeamAnalyzer.h>


namespace ImgBeamAnalyzer_ns
{
//=====================================
//	Define classes for attributes
//=====================================
class GaussianFitRelChangeAttrib: public Tango::Attr
{
public:
	GaussianFitRelChangeAttrib():Attr("GaussianFitRelChange", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitRelChangeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitRelChange(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitRelChange_allowed(ty);}
};

class GaussianFitNbIterAttrib: public Tango::Attr
{
public:
	GaussianFitNbIterAttrib():Attr("GaussianFitNbIter", Tango::DEV_LONG, Tango::READ) {};
	~GaussianFitNbIterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitNbIter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitNbIter_allowed(ty);}
};

class YProfileFitRelChangeAttrib: public Tango::Attr
{
public:
	YProfileFitRelChangeAttrib():Attr("YProfileFitRelChange", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileFitRelChangeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileFitRelChange(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileFitRelChange_allowed(ty);}
};

class YProfileNbIterAttrib: public Tango::Attr
{
public:
	YProfileNbIterAttrib():Attr("YProfileNbIter", Tango::DEV_LONG, Tango::READ) {};
	~YProfileNbIterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileNbIter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileNbIter_allowed(ty);}
};

class XProfileFitRelChangeAttrib: public Tango::Attr
{
public:
	XProfileFitRelChangeAttrib():Attr("XProfileFitRelChange", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileFitRelChangeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileFitRelChange(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileFitRelChange_allowed(ty);}
};

class XProfileNbIterAttrib: public Tango::Attr
{
public:
	XProfileNbIterAttrib():Attr("XProfileNbIter", Tango::DEV_LONG, Tango::READ) {};
	~XProfileNbIterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileNbIter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileNbIter_allowed(ty);}
};

class Fit2DMaxRelChangeAttrib: public Tango::Attr
{
public:
	Fit2DMaxRelChangeAttrib():Attr("Fit2DMaxRelChange", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~Fit2DMaxRelChangeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Fit2DMaxRelChange(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Fit2DMaxRelChange(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Fit2DMaxRelChange_allowed(ty);}
};

class Fit2DNbIterMaxAttrib: public Tango::Attr
{
public:
	Fit2DNbIterMaxAttrib():Attr("Fit2DNbIterMax", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~Fit2DNbIterMaxAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Fit2DNbIterMax(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Fit2DNbIterMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Fit2DNbIterMax_allowed(ty);}
};

class Fit1DMaxRelChangeAttrib: public Tango::Attr
{
public:
	Fit1DMaxRelChangeAttrib():Attr("Fit1DMaxRelChange", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~Fit1DMaxRelChangeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Fit1DMaxRelChange(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Fit1DMaxRelChange(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Fit1DMaxRelChange_allowed(ty);}
};

class Fit1DNbIterMaxAttrib: public Tango::Attr
{
public:
	Fit1DNbIterMaxAttrib():Attr("Fit1DNbIterMax", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~Fit1DNbIterMaxAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Fit1DNbIterMax(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Fit1DNbIterMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Fit1DNbIterMax_allowed(ty);}
};

class GaussianFitParameterCovarianceAttrib: public Tango::ImageAttr
{
public:
	GaussianFitParameterCovarianceAttrib():ImageAttr("GaussianFitParameterCovariance", Tango::DEV_DOUBLE, Tango::READ, 7, 7) {};
	~GaussianFitParameterCovarianceAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitParameterCovariance(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitParameterCovariance_allowed(ty);}
};

class GaussianFitChi2Attrib: public Tango::Attr
{
public:
	GaussianFitChi2Attrib():Attr("GaussianFitChi2", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitChi2Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitChi2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitChi2_allowed(ty);}
};

class GaussianFitBGAttrib: public Tango::Attr
{
public:
	GaussianFitBGAttrib():Attr("GaussianFitBG", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitBGAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitBG(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitBG_allowed(ty);}
};

class GaussianFitTiltAttrib: public Tango::Attr
{
public:
	GaussianFitTiltAttrib():Attr("GaussianFitTilt", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitTiltAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitTilt(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitTilt_allowed(ty);}
};

class GaussianFitMinorAxisFWHMAttrib: public Tango::Attr
{
public:
	GaussianFitMinorAxisFWHMAttrib():Attr("GaussianFitMinorAxisFWHM", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitMinorAxisFWHMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitMinorAxisFWHM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitMinorAxisFWHM_allowed(ty);}
};

class GaussianFitMajorAxisFWHMAttrib: public Tango::Attr
{
public:
	GaussianFitMajorAxisFWHMAttrib():Attr("GaussianFitMajorAxisFWHM", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitMajorAxisFWHMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitMajorAxisFWHM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitMajorAxisFWHM_allowed(ty);}
};

class GaussianFitCovarianceXYAttrib: public Tango::Attr
{
public:
	GaussianFitCovarianceXYAttrib():Attr("GaussianFitCovarianceXY", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitCovarianceXYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitCovarianceXY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitCovarianceXY_allowed(ty);}
};

class GaussianFitVarianceYAttrib: public Tango::Attr
{
public:
	GaussianFitVarianceYAttrib():Attr("GaussianFitVarianceY", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitVarianceYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitVarianceY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitVarianceY_allowed(ty);}
};

class GaussianFitVarianceXAttrib: public Tango::Attr
{
public:
	GaussianFitVarianceXAttrib():Attr("GaussianFitVarianceX", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitVarianceXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitVarianceX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitVarianceX_allowed(ty);}
};

class GaussianFitCenterYAttrib: public Tango::Attr
{
public:
	GaussianFitCenterYAttrib():Attr("GaussianFitCenterY", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitCenterYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitCenterY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitCenterY_allowed(ty);}
};

class GaussianFitCenterXAttrib: public Tango::Attr
{
public:
	GaussianFitCenterXAttrib():Attr("GaussianFitCenterX", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitCenterXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitCenterX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitCenterX_allowed(ty);}
};

class GaussianFitMagnitudeAttrib: public Tango::Attr
{
public:
	GaussianFitMagnitudeAttrib():Attr("GaussianFitMagnitude", Tango::DEV_DOUBLE, Tango::READ) {};
	~GaussianFitMagnitudeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitMagnitude(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitMagnitude_allowed(ty);}
};

class GaussianFitConvergedAttrib: public Tango::Attr
{
public:
	GaussianFitConvergedAttrib():Attr("GaussianFitConverged", Tango::DEV_BOOLEAN, Tango::READ) {};
	~GaussianFitConvergedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GaussianFitConverged(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GaussianFitConverged_allowed(ty);}
};

class HistogramAttrib: public Tango::SpectrumAttr
{
public:
	HistogramAttrib():SpectrumAttr("Histogram", Tango::DEV_FLOAT, Tango::READ, 131072) {};
	~HistogramAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Histogram(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Histogram_allowed(ty);}
};

class YProfileChi2Attrib: public Tango::Attr
{
public:
	YProfileChi2Attrib():Attr("YProfileChi2", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileChi2Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileChi2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileChi2_allowed(ty);}
};

class YProfileBGAttrib: public Tango::Attr
{
public:
	YProfileBGAttrib():Attr("YProfileBG", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileBGAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileBG(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileBG_allowed(ty);}
};

class YProfileFWHMAttrib: public Tango::Attr
{
public:
	YProfileFWHMAttrib():Attr("YProfileFWHM", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileFWHMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileFWHM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileFWHM_allowed(ty);}
};

class YProfileSigmaAttrib: public Tango::Attr
{
public:
	YProfileSigmaAttrib():Attr("YProfileSigma", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileSigmaAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileSigma(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileSigma_allowed(ty);}
};

class YProfileMagAttrib: public Tango::Attr
{
public:
	YProfileMagAttrib():Attr("YProfileMag", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileMagAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileMag(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileMag_allowed(ty);}
};

class YProfileCenterAttrib: public Tango::Attr
{
public:
	YProfileCenterAttrib():Attr("YProfileCenter", Tango::DEV_DOUBLE, Tango::READ) {};
	~YProfileCenterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileCenter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileCenter_allowed(ty);}
};

class YProfileErrorAttrib: public Tango::SpectrumAttr
{
public:
	YProfileErrorAttrib():SpectrumAttr("YProfileError", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~YProfileErrorAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileError(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileError_allowed(ty);}
};

class YProfileFittedAttrib: public Tango::SpectrumAttr
{
public:
	YProfileFittedAttrib():SpectrumAttr("YProfileFitted", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~YProfileFittedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileFitted(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileFitted_allowed(ty);}
};

class YProfileFitConvergedAttrib: public Tango::Attr
{
public:
	YProfileFitConvergedAttrib():Attr("YProfileFitConverged", Tango::DEV_BOOLEAN, Tango::READ) {};
	~YProfileFitConvergedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfileFitConverged(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfileFitConverged_allowed(ty);}
};

class YProfileAttrib: public Tango::SpectrumAttr
{
public:
	YProfileAttrib():SpectrumAttr("YProfile", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~YProfileAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_YProfile(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_YProfile_allowed(ty);}
};

class XProfileChi2Attrib: public Tango::Attr
{
public:
	XProfileChi2Attrib():Attr("XProfileChi2", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileChi2Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileChi2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileChi2_allowed(ty);}
};

class XProfileBGAttrib: public Tango::Attr
{
public:
	XProfileBGAttrib():Attr("XProfileBG", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileBGAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileBG(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileBG_allowed(ty);}
};

class XProfileFWHMAttrib: public Tango::Attr
{
public:
	XProfileFWHMAttrib():Attr("XProfileFWHM", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileFWHMAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileFWHM(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileFWHM_allowed(ty);}
};

class XProfileSigmaAttrib: public Tango::Attr
{
public:
	XProfileSigmaAttrib():Attr("XProfileSigma", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileSigmaAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileSigma(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileSigma_allowed(ty);}
};

class XProfileMagAttrib: public Tango::Attr
{
public:
	XProfileMagAttrib():Attr("XProfileMag", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileMagAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileMag(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileMag_allowed(ty);}
};

class XProfileCenterAttrib: public Tango::Attr
{
public:
	XProfileCenterAttrib():Attr("XProfileCenter", Tango::DEV_DOUBLE, Tango::READ) {};
	~XProfileCenterAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileCenter(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileCenter_allowed(ty);}
};

class XProfileErrorAttrib: public Tango::SpectrumAttr
{
public:
	XProfileErrorAttrib():SpectrumAttr("XProfileError", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~XProfileErrorAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileError(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileError_allowed(ty);}
};

class XProfileFittedAttrib: public Tango::SpectrumAttr
{
public:
	XProfileFittedAttrib():SpectrumAttr("XProfileFitted", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~XProfileFittedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileFitted(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileFitted_allowed(ty);}
};

class XProfileFitConvergedAttrib: public Tango::Attr
{
public:
	XProfileFitConvergedAttrib():Attr("XProfileFitConverged", Tango::DEV_BOOLEAN, Tango::READ) {};
	~XProfileFitConvergedAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfileFitConverged(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfileFitConverged_allowed(ty);}
};

class XProfileAttrib: public Tango::SpectrumAttr
{
public:
	XProfileAttrib():SpectrumAttr("XProfile", Tango::DEV_DOUBLE, Tango::READ, 131072) {};
	~XProfileAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_XProfile(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_XProfile_allowed(ty);}
};

class SkewXY2Attrib: public Tango::Attr
{
public:
	SkewXY2Attrib():Attr("SkewXY2", Tango::DEV_DOUBLE, Tango::READ) {};
	~SkewXY2Attrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_SkewXY2(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_SkewXY2_allowed(ty);}
};

class SkewX2YAttrib: public Tango::Attr
{
public:
	SkewX2YAttrib():Attr("SkewX2Y", Tango::DEV_DOUBLE, Tango::READ) {};
	~SkewX2YAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_SkewX2Y(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_SkewX2Y_allowed(ty);}
};

class SkewYAttrib: public Tango::Attr
{
public:
	SkewYAttrib():Attr("SkewY", Tango::DEV_DOUBLE, Tango::READ) {};
	~SkewYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_SkewY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_SkewY_allowed(ty);}
};

class SkewXAttrib: public Tango::Attr
{
public:
	SkewXAttrib():Attr("SkewX", Tango::DEV_DOUBLE, Tango::READ) {};
	~SkewXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_SkewX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_SkewX_allowed(ty);}
};

class CorrelationXYAttrib: public Tango::Attr
{
public:
	CorrelationXYAttrib():Attr("CorrelationXY", Tango::DEV_DOUBLE, Tango::READ) {};
	~CorrelationXYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_CorrelationXY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_CorrelationXY_allowed(ty);}
};

class CovarianceXYAttrib: public Tango::Attr
{
public:
	CovarianceXYAttrib():Attr("CovarianceXY", Tango::DEV_DOUBLE, Tango::READ) {};
	~CovarianceXYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_CovarianceXY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_CovarianceXY_allowed(ty);}
};

class VarianceYAttrib: public Tango::Attr
{
public:
	VarianceYAttrib():Attr("VarianceY", Tango::DEV_DOUBLE, Tango::READ) {};
	~VarianceYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_VarianceY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_VarianceY_allowed(ty);}
};

class VarianceXAttrib: public Tango::Attr
{
public:
	VarianceXAttrib():Attr("VarianceX", Tango::DEV_DOUBLE, Tango::READ) {};
	~VarianceXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_VarianceX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_VarianceX_allowed(ty);}
};

class CentroidYAttrib: public Tango::Attr
{
public:
	CentroidYAttrib():Attr("CentroidY", Tango::DEV_DOUBLE, Tango::READ) {};
	~CentroidYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_CentroidY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_CentroidY_allowed(ty);}
};

class CentroidXAttrib: public Tango::Attr
{
public:
	CentroidXAttrib():Attr("CentroidX", Tango::DEV_DOUBLE, Tango::READ) {};
	~CentroidXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_CentroidX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_CentroidX_allowed(ty);}
};

class MeanIntensityAttrib: public Tango::Attr
{
public:
	MeanIntensityAttrib():Attr("MeanIntensity", Tango::DEV_DOUBLE, Tango::READ) {};
	~MeanIntensityAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_MeanIntensity(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_MeanIntensity_allowed(ty);}
};

class MaxIntensityAttrib: public Tango::Attr
{
public:
	MaxIntensityAttrib():Attr("MaxIntensity", Tango::DEV_DOUBLE, Tango::READ) {};
	~MaxIntensityAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_MaxIntensity(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_MaxIntensity_allowed(ty);}
};

class MeanNoiseImageAttrib: public Tango::ImageAttr
{
public:
	MeanNoiseImageAttrib():ImageAttr("MeanNoiseImage", Tango::DEV_USHORT, Tango::READ, 131072, 131072) {};
	~MeanNoiseImageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_MeanNoiseImage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_MeanNoiseImage_allowed(ty);}
};

class ROIImageAttrib: public Tango::ImageAttr
{
public:
	ROIImageAttrib():ImageAttr("ROIImage", Tango::DEV_USHORT, Tango::READ, 131072, 131072) {};
	~ROIImageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_ROIImage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_ROIImage_allowed(ty);}
};

class InputImageAttrib: public Tango::ImageAttr
{
public:
	InputImageAttrib():ImageAttr("InputImage", Tango::DEV_USHORT, Tango::READ_WRITE, 131072, 131072) {};
	~InputImageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_InputImage(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_InputImage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_InputImage_allowed(ty);}
};

class NbNoiseImageAttrib: public Tango::Attr
{
public:
	NbNoiseImageAttrib():Attr("NbNoiseImage", Tango::DEV_LONG, Tango::READ) {};
	~NbNoiseImageAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_NbNoiseImage(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_NbNoiseImage_allowed(ty);}
};

class AutoROIHeightAttrib: public Tango::Attr
{
public:
	AutoROIHeightAttrib():Attr("AutoROIHeight", Tango::DEV_LONG, Tango::READ) {};
	~AutoROIHeightAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIHeight(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIHeight_allowed(ty);}
};

class AutoROIWidthAttrib: public Tango::Attr
{
public:
	AutoROIWidthAttrib():Attr("AutoROIWidth", Tango::DEV_LONG, Tango::READ) {};
	~AutoROIWidthAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIWidth(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIWidth_allowed(ty);}
};

class AutoROIOriginYAttrib: public Tango::Attr
{
public:
	AutoROIOriginYAttrib():Attr("AutoROIOriginY", Tango::DEV_LONG, Tango::READ) {};
	~AutoROIOriginYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIOriginY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIOriginY_allowed(ty);}
};

class AutoROIOriginXAttrib: public Tango::Attr
{
public:
	AutoROIOriginXAttrib():Attr("AutoROIOriginX", Tango::DEV_LONG, Tango::READ) {};
	~AutoROIOriginXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIOriginX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIOriginX_allowed(ty);}
};

class AutoROIFoundAttrib: public Tango::Attr
{
public:
	AutoROIFoundAttrib():Attr("AutoROIFound", Tango::DEV_BOOLEAN, Tango::READ) {};
	~AutoROIFoundAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIFound(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIFound_allowed(ty);}
};

class UserROIHeightAttrib: public Tango::Attr
{
public:
	UserROIHeightAttrib():Attr("UserROIHeight", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~UserROIHeightAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_UserROIHeight(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_UserROIHeight(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_UserROIHeight_allowed(ty);}
};

class UserROIWidthAttrib: public Tango::Attr
{
public:
	UserROIWidthAttrib():Attr("UserROIWidth", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~UserROIWidthAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_UserROIWidth(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_UserROIWidth(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_UserROIWidth_allowed(ty);}
};

class UserROIOriginYAttrib: public Tango::Attr
{
public:
	UserROIOriginYAttrib():Attr("UserROIOriginY", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~UserROIOriginYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_UserROIOriginY(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_UserROIOriginY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_UserROIOriginY_allowed(ty);}
};

class UserROIOriginXAttrib: public Tango::Attr
{
public:
	UserROIOriginXAttrib():Attr("UserROIOriginX", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~UserROIOriginXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_UserROIOriginX(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_UserROIOriginX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_UserROIOriginX_allowed(ty);}
};

class ProfileFitFixedBgAttrib: public Tango::Attr
{
public:
	ProfileFitFixedBgAttrib():Attr("ProfileFitFixedBg", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~ProfileFitFixedBgAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_ProfileFitFixedBg(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_ProfileFitFixedBg(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_ProfileFitFixedBg_allowed(ty);}
};

class OpticalMagnificationAttrib: public Tango::Attr
{
public:
	OpticalMagnificationAttrib():Attr("OpticalMagnification", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~OpticalMagnificationAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_OpticalMagnification(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_OpticalMagnification(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_OpticalMagnification_allowed(ty);}
};

class PixelSizeYAttrib: public Tango::Attr
{
public:
	PixelSizeYAttrib():Attr("PixelSizeY", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~PixelSizeYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_PixelSizeY(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_PixelSizeY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_PixelSizeY_allowed(ty);}
};

class PixelSizeXAttrib: public Tango::Attr
{
public:
	PixelSizeXAttrib():Attr("PixelSizeX", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~PixelSizeXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_PixelSizeX(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_PixelSizeX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_PixelSizeX_allowed(ty);}
};

class AlarmZoneAttrib: public Tango::Attr
{
public:
	AlarmZoneAttrib():Attr("AlarmZone", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~AlarmZoneAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AlarmZone(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_AlarmZone(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AlarmZone_allowed(ty);}
};

class AutoROIThresholdAttrib: public Tango::Attr
{
public:
	AutoROIThresholdAttrib():Attr("AutoROIThreshold", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~AutoROIThresholdAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIThreshold(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_AutoROIThreshold(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIThreshold_allowed(ty);}
};

class AutoROIMagFactorYAttrib: public Tango::Attr
{
public:
	AutoROIMagFactorYAttrib():Attr("AutoROIMagFactorY", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~AutoROIMagFactorYAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIMagFactorY(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_AutoROIMagFactorY(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIMagFactorY_allowed(ty);}
};

class AutoROIMagFactorXAttrib: public Tango::Attr
{
public:
	AutoROIMagFactorXAttrib():Attr("AutoROIMagFactorX", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~AutoROIMagFactorXAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_AutoROIMagFactorX(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_AutoROIMagFactorX(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_AutoROIMagFactorX_allowed(ty);}
};

class GammaCorrectionAttrib: public Tango::Attr
{
public:
	GammaCorrectionAttrib():Attr("GammaCorrection", Tango::DEV_DOUBLE, Tango::READ_WRITE) {};
	~GammaCorrectionAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_GammaCorrection(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_GammaCorrection(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GammaCorrection_allowed(ty);}
};

class HistogramRangeMaxAttrib: public Tango::Attr
{
public:
	HistogramRangeMaxAttrib():Attr("HistogramRangeMax", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~HistogramRangeMaxAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_HistogramRangeMax(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_HistogramRangeMax(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_HistogramRangeMax_allowed(ty);}
};

class HistogramRangeMinAttrib: public Tango::Attr
{
public:
	HistogramRangeMinAttrib():Attr("HistogramRangeMin", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~HistogramRangeMinAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_HistogramRangeMin(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_HistogramRangeMin(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_HistogramRangeMin_allowed(ty);}
};

class HistogramNbBinsAttrib: public Tango::Attr
{
public:
	HistogramNbBinsAttrib():Attr("HistogramNbBins", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~HistogramNbBinsAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_HistogramNbBins(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_HistogramNbBins(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_HistogramNbBins_allowed(ty);}
};

class BitsPerPixelAttrib: public Tango::Attr
{
public:
	BitsPerPixelAttrib():Attr("BitsPerPixel", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~BitsPerPixelAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_BitsPerPixel(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_BitsPerPixel(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_BitsPerPixel_allowed(ty);}
};

class HorizontalFlipAttrib: public Tango::Attr
{
public:
	HorizontalFlipAttrib():Attr("HorizontalFlip", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~HorizontalFlipAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_HorizontalFlip(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_HorizontalFlip(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_HorizontalFlip_allowed(ty);}
};

class RotationAttrib: public Tango::Attr
{
public:
	RotationAttrib():Attr("Rotation", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~RotationAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Rotation(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Rotation(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Rotation_allowed(ty);}
};

class EstimComputTimeAttrib: public Tango::Attr
{
public:
	EstimComputTimeAttrib():Attr("EstimComputTime", Tango::DEV_LONG, Tango::READ) {};
	~EstimComputTimeAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EstimComputTime(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EstimComputTime_allowed(ty);}
};

class ComputationPeriodAttrib: public Tango::Attr
{
public:
	ComputationPeriodAttrib():Attr("ComputationPeriod", Tango::DEV_LONG, Tango::READ_WRITE) {};
	~ComputationPeriodAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_ComputationPeriod(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_ComputationPeriod(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_ComputationPeriod_allowed(ty);}
};

class Enable2DGaussianFitAttrib: public Tango::Attr
{
public:
	Enable2DGaussianFitAttrib():Attr("Enable2DGaussianFit", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~Enable2DGaussianFitAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_Enable2DGaussianFit(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_Enable2DGaussianFit(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Enable2DGaussianFit_allowed(ty);}
};

class EnableAutoROIAttrib: public Tango::Attr
{
public:
	EnableAutoROIAttrib():Attr("EnableAutoROI", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~EnableAutoROIAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EnableAutoROI(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_EnableAutoROI(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EnableAutoROI_allowed(ty);}
};

class EnableUserROIAttrib: public Tango::Attr
{
public:
	EnableUserROIAttrib():Attr("EnableUserROI", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~EnableUserROIAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EnableUserROI(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_EnableUserROI(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EnableUserROI_allowed(ty);}
};

class EnableHistogramAttrib: public Tango::Attr
{
public:
	EnableHistogramAttrib():Attr("EnableHistogram", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~EnableHistogramAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EnableHistogram(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_EnableHistogram(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EnableHistogram_allowed(ty);}
};

class EnableProfilesAttrib: public Tango::Attr
{
public:
	EnableProfilesAttrib():Attr("EnableProfiles", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~EnableProfilesAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EnableProfiles(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_EnableProfiles(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EnableProfiles_allowed(ty);}
};

class EnableImageStatsAttrib: public Tango::Attr
{
public:
	EnableImageStatsAttrib():Attr("EnableImageStats", Tango::DEV_BOOLEAN, Tango::READ_WRITE) {};
	~EnableImageStatsAttrib() {};
	
	virtual void read(Tango::DeviceImpl *dev,Tango::Attribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->read_EnableImageStats(att);}
	virtual void write(Tango::DeviceImpl *dev,Tango::WAttribute &att)
	{(static_cast<ImgBeamAnalyzer *>(dev))->write_EnableImageStats(att);}
	virtual bool is_allowed(Tango::DeviceImpl *dev,Tango::AttReqType ty)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_EnableImageStats_allowed(ty);}
};

//=========================================
//	Define classes for commands
//=========================================
class GetVersionNumberClass : public Tango::Command
{
public:
	GetVersionNumberClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	GetVersionNumberClass(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~GetVersionNumberClass() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_GetVersionNumber_allowed(any);}
};



class StopLearnNoiseCmd : public Tango::Command
{
public:
	StopLearnNoiseCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	StopLearnNoiseCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~StopLearnNoiseCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_StopLearnNoise_allowed(any);}
};



class StartLearnNoiseCmd : public Tango::Command
{
public:
	StartLearnNoiseCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	StartLearnNoiseCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~StartLearnNoiseCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_StartLearnNoise_allowed(any);}
};



class SaveCurrentSettingsCmd : public Tango::Command
{
public:
	SaveCurrentSettingsCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	SaveCurrentSettingsCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~SaveCurrentSettingsCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_SaveCurrentSettings_allowed(any);}
};



class ProcessCmd : public Tango::Command
{
public:
	ProcessCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	ProcessCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~ProcessCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Process_allowed(any);}
};



class StopCmd : public Tango::Command
{
public:
	StopCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	StopCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~StopCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Stop_allowed(any);}
};



class StartCmd : public Tango::Command
{
public:
	StartCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out,
				   const char        *in_desc,
				   const char        *out_desc,
				   Tango::DispLevel  level)
	:Command(name,in,out,in_desc,out_desc, level)	{};

	StartCmd(const char   *name,
	               Tango::CmdArgType in,
				   Tango::CmdArgType out)
	:Command(name,in,out)	{};
	~StartCmd() {};
	
	virtual CORBA::Any *execute (Tango::DeviceImpl *dev, const CORBA::Any &any);
	virtual bool is_allowed (Tango::DeviceImpl *dev, const CORBA::Any &any)
	{return (static_cast<ImgBeamAnalyzer *>(dev))->is_Start_allowed(any);}
};



//
// The ImgBeamAnalyzerClass singleton definition
//

class ImgBeamAnalyzerClass : public Tango::DeviceClass
{
public:
//	properties member data

//	add your own data members here
//------------------------------------

public:
	Tango::DbData	cl_prop;
	Tango::DbData	cl_def_prop;
	Tango::DbData	dev_def_prop;

//	Method prototypes
	static ImgBeamAnalyzerClass *init(const char *);
	static ImgBeamAnalyzerClass *instance();
	~ImgBeamAnalyzerClass();
	Tango::DbDatum	get_class_property(string &);
	Tango::DbDatum	get_default_device_property(string &);
	Tango::DbDatum	get_default_class_property(string &);
	
protected:
	ImgBeamAnalyzerClass(string &);
	static ImgBeamAnalyzerClass *_instance;
	void command_factory();
	void get_class_property();
	void attribute_factory(vector<Tango::Attr *> &);
	void write_class_property();
	void set_default_property();

private:
	void device_factory(const Tango::DevVarStringArray *);
};


}	//	namespace ImgBeamAnalyzer_ns

#endif // _IMGBEAMANALYZERCLASS_H
